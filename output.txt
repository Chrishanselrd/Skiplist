Mon Nov 28 17:04:00 PST 2022
Linux csslab8 4.18.0-372.32.1.el8_6.x86_64 #1 SMP Thu Oct 27 15:18:36 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux
uid=1282459(cdimip) gid=2121282459(cdimip) groups=2121282459(cdimip),605559(lab-access)
=====================================================
1. Compiles without warnings with -Wall -Wextra flags
=====================================================
=====================================================
2. Runs and produces correct output
=====================================================
test1 done.
test2 done.
test3 done.
test4 done.
Done.
=====================================================
3. clang-tidy warnings are fixed
=====================================================
12603 warnings generated.
17718 warnings generated.
33530 warnings generated.
/home/NETID/cdimip/2021au342d-p4-skiplist-PretzelHH/skiplist.cpp:65:20: error: 2 adjacent parameters of 'SkipList' of similar type ('int') are easily swapped by mistake [bugprone-easily-swappable-parameters,-warnings-as-errors]
SkipList::SkipList(int levels, int probability) {
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/NETID/cdimip/2021au342d-p4-skiplist-PretzelHH/skiplist.cpp:65:24: note: the first parameter in the range is 'levels'
SkipList::SkipList(int levels, int probability) {
                       ^~~~~~
/home/NETID/cdimip/2021au342d-p4-skiplist-PretzelHH/skiplist.cpp:65:36: note: the last parameter in the range is 'probability'
SkipList::SkipList(int levels, int probability) {
                                   ^~~~~~~~~~~
Suppressed 33529 warnings (33529 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.
1 warning treated as error
=====================================================
4. clang-format does not find any formatting issues
=====================================================
Running clang-format on ./main.cpp
Running clang-format on ./random.cpp
Running clang-format on ./skiplist.cpp
=====================================================
5. No memory leaks using g++
=====================================================
=================================================================
==1361520==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000378 at pc 0x000000406929 bp 0x7ffea8d54d70 sp 0x7ffea8d54d60
WRITE of size 8 at 0x602000000378 thread T0
    #0 0x406928 in SkipList::SkipList(int, int) /home/NETID/cdimip/2021au342d-p4-skiplist-PretzelHH/skiplist.cpp:68
    #1 0x4031de in test3() /home/NETID/cdimip/2021au342d-p4-skiplist-PretzelHH/main.cpp:69
    #2 0x404e82 in main /home/NETID/cdimip/2021au342d-p4-skiplist-PretzelHH/main.cpp:138
    #3 0x7f80eb8dccf2 in __libc_start_main (/lib64/libc.so.6+0x3acf2)
    #4 0x4017ad in _start (/home/NETID/cdimip/2021au342d-p4-skiplist-PretzelHH/a.out+0x4017ad)

0x602000000378 is located 0 bytes to the right of 8-byte region [0x602000000370,0x602000000378)
allocated by thread T0 here:
    #0 0x7f80ec6877b0 in operator new(unsigned long) (/lib64/libasan.so.5+0xf17b0)
    #1 0x409aaa in __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) /usr/include/c++/8/ext/new_allocator.h:111
    #2 0x40970b in std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) /usr/include/c++/8/bits/alloc_traits.h:436
    #3 0x409031 in std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) /usr/include/c++/8/bits/stl_vector.h:296
    #4 0x4092c9 in void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) /usr/include/c++/8/bits/vector.tcc:427
    #5 0x4089f0 in void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) /usr/include/c++/8/bits/vector.tcc:109
    #6 0x40804f in std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) /usr/include/c++/8/bits/stl_vector.h:1091
    #7 0x40649b in SNode::SNode(int) /home/NETID/cdimip/2021au342d-p4-skiplist-PretzelHH/skiplist.cpp:36
    #8 0x40688b in SkipList::SkipList(int, int) /home/NETID/cdimip/2021au342d-p4-skiplist-PretzelHH/skiplist.cpp:66
    #9 0x4031de in test3() /home/NETID/cdimip/2021au342d-p4-skiplist-PretzelHH/main.cpp:69
    #10 0x404e82 in main /home/NETID/cdimip/2021au342d-p4-skiplist-PretzelHH/main.cpp:138
    #11 0x7f80eb8dccf2 in __libc_start_main (/lib64/libc.so.6+0x3acf2)

SUMMARY: AddressSanitizer: heap-buffer-overflow /home/NETID/cdimip/2021au342d-p4-skiplist-PretzelHH/skiplist.cpp:68 in SkipList::SkipList(int, int)
Shadow bytes around the buggy address:
  0x0c047fff8010: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa
  0x0c047fff8020: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa
  0x0c047fff8030: fa fa fd fa fa fa fd fd fa fa fd fa fa fa fd fa
  0x0c047fff8040: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa
  0x0c047fff8050: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa
=>0x0c047fff8060: fa fa fd fa fa fa fd fa fa fa fd fa fa fa 00[fa]
  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8090: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff80a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff80b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==1361520==ABORTING
=====================================================
6. No memory leaks using valgrind, look for "definitely lost" 
=====================================================
==1361531== Memcheck, a memory error detector
==1361531== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1361531== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==1361531== Command: ./a.out
==1361531== Parent PID: 1361445
==1361531== 
==1361531== Invalid write of size 8
==1361531==    at 0x403444: SkipList::SkipList(int, int) (skiplist.cpp:68)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f538 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403139: SkipList::getBeforeNodes(int) const (skiplist.cpp:25)
==1361531==    by 0x40376F: SkipList::add(int) (skiplist.cpp:116)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x401BA7: test3() (main.cpp:70)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f538 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x40389E: SkipList::add(int) (skiplist.cpp:135)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x401BA7: test3() (main.cpp:70)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f538 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid write of size 8
==1361531==    at 0x4038CA: SkipList::add(int) (skiplist.cpp:136)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x401BA7: test3() (main.cpp:70)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f538 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403159: SkipList::getBeforeNodes(int) const (skiplist.cpp:25)
==1361531==    by 0x40376F: SkipList::add(int) (skiplist.cpp:116)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x401BA7: test3() (main.cpp:70)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f538 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403921: SkipList::add(int) (skiplist.cpp:139)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x401BA7: test3() (main.cpp:70)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f538 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid write of size 8
==1361531==    at 0x403924: SkipList::add(int) (skiplist.cpp:139)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x401BA7: test3() (main.cpp:70)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4fd08 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403755: SkipList::add(int) (skiplist.cpp:115)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x401BA7: test3() (main.cpp:70)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid write of size 8
==1361531==    at 0x403946: SkipList::add(int) (skiplist.cpp:140)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x401BA7: test3() (main.cpp:70)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f538 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x40318B: SkipList::getBeforeNodes(int) const (skiplist.cpp:26)
==1361531==    by 0x40376F: SkipList::add(int) (skiplist.cpp:116)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x401BA7: test3() (main.cpp:70)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f538 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403327: operator<<(std::ostream&, SkipList const&) (skiplist.cpp:51)
==1361531==    by 0x401BE2: test3() (main.cpp:72)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f540 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x40339F: operator<<(std::ostream&, SkipList const&) (skiplist.cpp:56)
==1361531==    by 0x401BE2: test3() (main.cpp:72)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f9b0 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403755: SkipList::add(int) (skiplist.cpp:115)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x401BA7: test3() (main.cpp:70)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403139: SkipList::getBeforeNodes(int) const (skiplist.cpp:25)
==1361531==    by 0x40376F: SkipList::add(int) (skiplist.cpp:116)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x401CB2: test3() (main.cpp:77)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f538 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403159: SkipList::getBeforeNodes(int) const (skiplist.cpp:25)
==1361531==    by 0x40376F: SkipList::add(int) (skiplist.cpp:116)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x401CB2: test3() (main.cpp:77)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f538 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x40389E: SkipList::add(int) (skiplist.cpp:135)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x401CB2: test3() (main.cpp:77)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f538 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403921: SkipList::add(int) (skiplist.cpp:139)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x401CB2: test3() (main.cpp:77)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f538 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid write of size 8
==1361531==    at 0x403924: SkipList::add(int) (skiplist.cpp:139)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x401CB2: test3() (main.cpp:77)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b503a8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403755: SkipList::add(int) (skiplist.cpp:115)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x401CB2: test3() (main.cpp:77)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid write of size 8
==1361531==    at 0x403946: SkipList::add(int) (skiplist.cpp:140)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x401CB2: test3() (main.cpp:77)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f538 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x40318B: SkipList::getBeforeNodes(int) const (skiplist.cpp:26)
==1361531==    by 0x40376F: SkipList::add(int) (skiplist.cpp:116)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x401CB2: test3() (main.cpp:77)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f538 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403327: operator<<(std::ostream&, SkipList const&) (skiplist.cpp:51)
==1361531==    by 0x401D4E: test3() (main.cpp:79)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f540 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x40339F: operator<<(std::ostream&, SkipList const&) (skiplist.cpp:56)
==1361531==    by 0x401D4E: test3() (main.cpp:79)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b503b0 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403755: SkipList::add(int) (skiplist.cpp:115)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x401CB2: test3() (main.cpp:77)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403B72: SkipList::contains(int) const (skiplist.cpp:181)
==1361531==    by 0x401DBB: test3() (main.cpp:86)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f540 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403B9D: SkipList::contains(int) const (skiplist.cpp:186)
==1361531==    by 0x401DBB: test3() (main.cpp:86)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f540 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403BC2: SkipList::contains(int) const (skiplist.cpp:187)
==1361531==    by 0x401DBB: test3() (main.cpp:86)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f540 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403BFC: SkipList::contains(int) const (skiplist.cpp:194)
==1361531==    by 0x401DBB: test3() (main.cpp:86)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f540 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403C2A: SkipList::contains(int) const (skiplist.cpp:197)
==1361531==    by 0x401DBB: test3() (main.cpp:86)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f540 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403B72: SkipList::contains(int) const (skiplist.cpp:181)
==1361531==    by 0x401DD3: test3() (main.cpp:86)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f540 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403B9D: SkipList::contains(int) const (skiplist.cpp:186)
==1361531==    by 0x401DD3: test3() (main.cpp:86)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f540 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403BC2: SkipList::contains(int) const (skiplist.cpp:187)
==1361531==    by 0x401DD3: test3() (main.cpp:86)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f540 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403BFC: SkipList::contains(int) const (skiplist.cpp:194)
==1361531==    by 0x401DD3: test3() (main.cpp:86)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f540 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403C2A: SkipList::contains(int) const (skiplist.cpp:197)
==1361531==    by 0x401DD3: test3() (main.cpp:86)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f540 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403B72: SkipList::contains(int) const (skiplist.cpp:181)
==1361531==    by 0x401DEB: test3() (main.cpp:86)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f540 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403B9D: SkipList::contains(int) const (skiplist.cpp:186)
==1361531==    by 0x401DEB: test3() (main.cpp:86)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f540 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403BC2: SkipList::contains(int) const (skiplist.cpp:187)
==1361531==    by 0x401DEB: test3() (main.cpp:86)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f540 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403BFC: SkipList::contains(int) const (skiplist.cpp:194)
==1361531==    by 0x401DEB: test3() (main.cpp:86)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f540 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403C2A: SkipList::contains(int) const (skiplist.cpp:197)
==1361531==    by 0x401DEB: test3() (main.cpp:86)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f540 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403B72: SkipList::contains(int) const (skiplist.cpp:181)
==1361531==    by 0x401E1C: test3() (main.cpp:87)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f540 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403B9D: SkipList::contains(int) const (skiplist.cpp:186)
==1361531==    by 0x401E1C: test3() (main.cpp:87)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f540 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403BC2: SkipList::contains(int) const (skiplist.cpp:187)
==1361531==    by 0x401E1C: test3() (main.cpp:87)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f540 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403BFC: SkipList::contains(int) const (skiplist.cpp:194)
==1361531==    by 0x401E1C: test3() (main.cpp:87)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f540 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403C2A: SkipList::contains(int) const (skiplist.cpp:197)
==1361531==    by 0x401E1C: test3() (main.cpp:87)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f540 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403B72: SkipList::contains(int) const (skiplist.cpp:181)
==1361531==    by 0x401E37: test3() (main.cpp:87)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f540 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403B9D: SkipList::contains(int) const (skiplist.cpp:186)
==1361531==    by 0x401E37: test3() (main.cpp:87)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f540 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403BC2: SkipList::contains(int) const (skiplist.cpp:187)
==1361531==    by 0x401E37: test3() (main.cpp:87)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f540 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403BFC: SkipList::contains(int) const (skiplist.cpp:194)
==1361531==    by 0x401E37: test3() (main.cpp:87)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f540 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403C2A: SkipList::contains(int) const (skiplist.cpp:197)
==1361531==    by 0x401E37: test3() (main.cpp:87)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f540 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403B72: SkipList::contains(int) const (skiplist.cpp:181)
==1361531==    by 0x401E6B: test3() (main.cpp:88)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f540 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403B9D: SkipList::contains(int) const (skiplist.cpp:186)
==1361531==    by 0x401E6B: test3() (main.cpp:88)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f540 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403BC2: SkipList::contains(int) const (skiplist.cpp:187)
==1361531==    by 0x401E6B: test3() (main.cpp:88)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f540 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403BFC: SkipList::contains(int) const (skiplist.cpp:194)
==1361531==    by 0x401E6B: test3() (main.cpp:88)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f540 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403B72: SkipList::contains(int) const (skiplist.cpp:181)
==1361531==    by 0x401E83: test3() (main.cpp:88)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f540 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403B9D: SkipList::contains(int) const (skiplist.cpp:186)
==1361531==    by 0x401E83: test3() (main.cpp:88)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f540 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403BC2: SkipList::contains(int) const (skiplist.cpp:187)
==1361531==    by 0x401E83: test3() (main.cpp:88)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f540 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403BFC: SkipList::contains(int) const (skiplist.cpp:194)
==1361531==    by 0x401E83: test3() (main.cpp:88)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f540 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403C2A: SkipList::contains(int) const (skiplist.cpp:197)
==1361531==    by 0x401E83: test3() (main.cpp:88)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b4f540 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401AF7: test3() (main.cpp:69)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid write of size 8
==1361531==    at 0x403444: SkipList::SkipList(int, int) (skiplist.cpp:68)
==1361531==    by 0x401EB9: test3() (main.cpp:90)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b507d8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401EB9: test3() (main.cpp:90)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403139: SkipList::getBeforeNodes(int) const (skiplist.cpp:25)
==1361531==    by 0x40376F: SkipList::add(int) (skiplist.cpp:116)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x401F58: test3() (main.cpp:91)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b507d8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401EB9: test3() (main.cpp:90)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x40389E: SkipList::add(int) (skiplist.cpp:135)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x401F58: test3() (main.cpp:91)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b507d8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401EB9: test3() (main.cpp:90)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid write of size 8
==1361531==    at 0x4038CA: SkipList::add(int) (skiplist.cpp:136)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x401F58: test3() (main.cpp:91)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b507d8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401EB9: test3() (main.cpp:90)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403159: SkipList::getBeforeNodes(int) const (skiplist.cpp:25)
==1361531==    by 0x40376F: SkipList::add(int) (skiplist.cpp:116)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x401F58: test3() (main.cpp:91)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b507d8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401EB9: test3() (main.cpp:90)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403921: SkipList::add(int) (skiplist.cpp:139)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x401F58: test3() (main.cpp:91)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b507d8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401EB9: test3() (main.cpp:90)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid write of size 8
==1361531==    at 0x403924: SkipList::add(int) (skiplist.cpp:139)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x401F58: test3() (main.cpp:91)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b50fa8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403755: SkipList::add(int) (skiplist.cpp:115)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x401F58: test3() (main.cpp:91)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid write of size 8
==1361531==    at 0x403946: SkipList::add(int) (skiplist.cpp:140)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x401F58: test3() (main.cpp:91)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b507d8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401EB9: test3() (main.cpp:90)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x40318B: SkipList::getBeforeNodes(int) const (skiplist.cpp:26)
==1361531==    by 0x40376F: SkipList::add(int) (skiplist.cpp:116)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x401F58: test3() (main.cpp:91)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b507d8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401EB9: test3() (main.cpp:90)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403327: operator<<(std::ostream&, SkipList const&) (skiplist.cpp:51)
==1361531==    by 0x401FE2: test3() (main.cpp:93)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b507e0 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401EB9: test3() (main.cpp:90)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x40339F: operator<<(std::ostream&, SkipList const&) (skiplist.cpp:56)
==1361531==    by 0x401FE2: test3() (main.cpp:93)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b50fa8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403755: SkipList::add(int) (skiplist.cpp:115)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x401F58: test3() (main.cpp:91)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403B72: SkipList::contains(int) const (skiplist.cpp:181)
==1361531==    by 0x402046: test3() (main.cpp:98)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b507e0 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401EB9: test3() (main.cpp:90)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403B9D: SkipList::contains(int) const (skiplist.cpp:186)
==1361531==    by 0x402046: test3() (main.cpp:98)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b507d8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401EB9: test3() (main.cpp:90)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403BC2: SkipList::contains(int) const (skiplist.cpp:187)
==1361531==    by 0x402046: test3() (main.cpp:98)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b507d8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401EB9: test3() (main.cpp:90)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403BFC: SkipList::contains(int) const (skiplist.cpp:194)
==1361531==    by 0x402046: test3() (main.cpp:98)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b507d8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401EB9: test3() (main.cpp:90)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403B72: SkipList::contains(int) const (skiplist.cpp:181)
==1361531==    by 0x40205E: test3() (main.cpp:98)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b507e0 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401EB9: test3() (main.cpp:90)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403B9D: SkipList::contains(int) const (skiplist.cpp:186)
==1361531==    by 0x40205E: test3() (main.cpp:98)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b507d8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401EB9: test3() (main.cpp:90)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403BC2: SkipList::contains(int) const (skiplist.cpp:187)
==1361531==    by 0x40205E: test3() (main.cpp:98)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b507d8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401EB9: test3() (main.cpp:90)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403BFC: SkipList::contains(int) const (skiplist.cpp:194)
==1361531==    by 0x40205E: test3() (main.cpp:98)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b507d8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401EB9: test3() (main.cpp:90)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403C2A: SkipList::contains(int) const (skiplist.cpp:197)
==1361531==    by 0x40205E: test3() (main.cpp:98)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b507d8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401EB9: test3() (main.cpp:90)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403B72: SkipList::contains(int) const (skiplist.cpp:181)
==1361531==    by 0x402076: test3() (main.cpp:98)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b507e0 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401EB9: test3() (main.cpp:90)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403B9D: SkipList::contains(int) const (skiplist.cpp:186)
==1361531==    by 0x402076: test3() (main.cpp:98)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b507d8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401EB9: test3() (main.cpp:90)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403BC2: SkipList::contains(int) const (skiplist.cpp:187)
==1361531==    by 0x402076: test3() (main.cpp:98)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b507d8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401EB9: test3() (main.cpp:90)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403BFC: SkipList::contains(int) const (skiplist.cpp:194)
==1361531==    by 0x402076: test3() (main.cpp:98)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b507d8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401EB9: test3() (main.cpp:90)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403C2A: SkipList::contains(int) const (skiplist.cpp:197)
==1361531==    by 0x402076: test3() (main.cpp:98)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b507d8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401EB9: test3() (main.cpp:90)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403B72: SkipList::contains(int) const (skiplist.cpp:181)
==1361531==    by 0x4020A7: test3() (main.cpp:99)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b507e0 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401EB9: test3() (main.cpp:90)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403B9D: SkipList::contains(int) const (skiplist.cpp:186)
==1361531==    by 0x4020A7: test3() (main.cpp:99)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b507d8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401EB9: test3() (main.cpp:90)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403BC2: SkipList::contains(int) const (skiplist.cpp:187)
==1361531==    by 0x4020A7: test3() (main.cpp:99)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b507d8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401EB9: test3() (main.cpp:90)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403B72: SkipList::contains(int) const (skiplist.cpp:181)
==1361531==    by 0x4020C2: test3() (main.cpp:99)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b507e0 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401EB9: test3() (main.cpp:90)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403B9D: SkipList::contains(int) const (skiplist.cpp:186)
==1361531==    by 0x4020C2: test3() (main.cpp:99)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b507d8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401EB9: test3() (main.cpp:90)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403BC2: SkipList::contains(int) const (skiplist.cpp:187)
==1361531==    by 0x4020C2: test3() (main.cpp:99)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b507d8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401EB9: test3() (main.cpp:90)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403BFC: SkipList::contains(int) const (skiplist.cpp:194)
==1361531==    by 0x4020C2: test3() (main.cpp:99)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b507d8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401EB9: test3() (main.cpp:90)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403C2A: SkipList::contains(int) const (skiplist.cpp:197)
==1361531==    by 0x4020C2: test3() (main.cpp:99)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b507d8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401EB9: test3() (main.cpp:90)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403B72: SkipList::contains(int) const (skiplist.cpp:181)
==1361531==    by 0x4020DD: test3() (main.cpp:99)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b507e0 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401EB9: test3() (main.cpp:90)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403B9D: SkipList::contains(int) const (skiplist.cpp:186)
==1361531==    by 0x4020DD: test3() (main.cpp:99)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b507d8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401EB9: test3() (main.cpp:90)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403BC2: SkipList::contains(int) const (skiplist.cpp:187)
==1361531==    by 0x4020DD: test3() (main.cpp:99)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b507d8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401EB9: test3() (main.cpp:90)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403BFC: SkipList::contains(int) const (skiplist.cpp:194)
==1361531==    by 0x4020DD: test3() (main.cpp:99)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b507d8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401EB9: test3() (main.cpp:90)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403C2A: SkipList::contains(int) const (skiplist.cpp:197)
==1361531==    by 0x4020DD: test3() (main.cpp:99)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531==  Address 0x5b507d8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x401EB9: test3() (main.cpp:90)
==1361531==    by 0x402750: main (main.cpp:138)
==1361531== 
==1361531== Invalid write of size 8
==1361531==    at 0x403444: SkipList::SkipList(int, int) (skiplist.cpp:68)
==1361531==    by 0x4022B5: test4() (main.cpp:107)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531==  Address 0x5b513a8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x4022B5: test4() (main.cpp:107)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403139: SkipList::getBeforeNodes(int) const (skiplist.cpp:25)
==1361531==    by 0x40376F: SkipList::add(int) (skiplist.cpp:116)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x402354: test4() (main.cpp:108)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531==  Address 0x5b513a8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x4022B5: test4() (main.cpp:107)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x40389E: SkipList::add(int) (skiplist.cpp:135)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x402354: test4() (main.cpp:108)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531==  Address 0x5b513a8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x4022B5: test4() (main.cpp:107)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531== 
==1361531== Invalid write of size 8
==1361531==    at 0x4038CA: SkipList::add(int) (skiplist.cpp:136)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x402354: test4() (main.cpp:108)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531==  Address 0x5b513a8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x4022B5: test4() (main.cpp:107)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403159: SkipList::getBeforeNodes(int) const (skiplist.cpp:25)
==1361531==    by 0x40376F: SkipList::add(int) (skiplist.cpp:116)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x402354: test4() (main.cpp:108)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531==  Address 0x5b513a8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x4022B5: test4() (main.cpp:107)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403921: SkipList::add(int) (skiplist.cpp:139)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x402354: test4() (main.cpp:108)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531==  Address 0x5b513a8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x4022B5: test4() (main.cpp:107)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531== 
==1361531== Invalid write of size 8
==1361531==    at 0x403924: SkipList::add(int) (skiplist.cpp:139)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x402354: test4() (main.cpp:108)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531==  Address 0x5b51818 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403755: SkipList::add(int) (skiplist.cpp:115)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x402354: test4() (main.cpp:108)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531== 
==1361531== Invalid write of size 8
==1361531==    at 0x403946: SkipList::add(int) (skiplist.cpp:140)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x402354: test4() (main.cpp:108)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531==  Address 0x5b513a8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x4022B5: test4() (main.cpp:107)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531== 
==1361531== 
==1361531== More than 100 errors detected.  Subsequent errors
==1361531== will still be recorded, but in less detail than before.
==1361531== Invalid read of size 8
==1361531==    at 0x403327: operator<<(std::ostream&, SkipList const&) (skiplist.cpp:51)
==1361531==    by 0x40238F: test4() (main.cpp:110)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531==  Address 0x5b513b0 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x4022B5: test4() (main.cpp:107)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x40339F: operator<<(std::ostream&, SkipList const&) (skiplist.cpp:56)
==1361531==    by 0x40238F: test4() (main.cpp:110)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531==  Address 0x5b51d30 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403755: SkipList::add(int) (skiplist.cpp:115)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x402354: test4() (main.cpp:108)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531== 
==1361531== Invalid write of size 8
==1361531==    at 0x40351A: SkipList::SkipList(SkipList const&) (skiplist.cpp:83)
==1361531==    by 0x402401: test4() (main.cpp:114)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531==  Address 0x5b521d8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x4034BE: SkipList::SkipList(SkipList const&) (skiplist.cpp:76)
==1361531==    by 0x402401: test4() (main.cpp:114)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x40356E: SkipList::SkipList(SkipList const&) (skiplist.cpp:91)
==1361531==    by 0x402401: test4() (main.cpp:114)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531==  Address 0x5b513a8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x4022B5: test4() (main.cpp:107)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403597: SkipList::SkipList(SkipList const&) (skiplist.cpp:92)
==1361531==    by 0x402401: test4() (main.cpp:114)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531==  Address 0x5b513a8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x4022B5: test4() (main.cpp:107)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x4035D1: SkipList::SkipList(SkipList const&) (skiplist.cpp:93)
==1361531==    by 0x402401: test4() (main.cpp:114)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531==  Address 0x5b521d8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x4034BE: SkipList::SkipList(SkipList const&) (skiplist.cpp:76)
==1361531==    by 0x402401: test4() (main.cpp:114)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531== 
==1361531== Invalid write of size 8
==1361531==    at 0x40361E: SkipList::SkipList(SkipList const&) (skiplist.cpp:96)
==1361531==    by 0x402401: test4() (main.cpp:114)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531==  Address 0x5b521d8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x4034BE: SkipList::SkipList(SkipList const&) (skiplist.cpp:76)
==1361531==    by 0x402401: test4() (main.cpp:114)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403639: SkipList::SkipList(SkipList const&) (skiplist.cpp:97)
==1361531==    by 0x402401: test4() (main.cpp:114)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531==  Address 0x5b513a8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x4022B5: test4() (main.cpp:107)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x4035F6: SkipList::SkipList(SkipList const&) (skiplist.cpp:94)
==1361531==    by 0x402401: test4() (main.cpp:114)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531==  Address 0x5b521d8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x4034BE: SkipList::SkipList(SkipList const&) (skiplist.cpp:76)
==1361531==    by 0x402401: test4() (main.cpp:114)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403139: SkipList::getBeforeNodes(int) const (skiplist.cpp:25)
==1361531==    by 0x403A27: SkipList::remove(int) (skiplist.cpp:155)
==1361531==    by 0x402415: test4() (main.cpp:115)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531==  Address 0x5b513a8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x4022B5: test4() (main.cpp:107)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403159: SkipList::getBeforeNodes(int) const (skiplist.cpp:25)
==1361531==    by 0x403A27: SkipList::remove(int) (skiplist.cpp:155)
==1361531==    by 0x402415: test4() (main.cpp:115)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531==  Address 0x5b513a8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x4022B5: test4() (main.cpp:107)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403B72: SkipList::contains(int) const (skiplist.cpp:181)
==1361531==    by 0x403A44: SkipList::remove(int) (skiplist.cpp:159)
==1361531==    by 0x402415: test4() (main.cpp:115)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531==  Address 0x5b513b0 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x4022B5: test4() (main.cpp:107)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403B9D: SkipList::contains(int) const (skiplist.cpp:186)
==1361531==    by 0x403A44: SkipList::remove(int) (skiplist.cpp:159)
==1361531==    by 0x402415: test4() (main.cpp:115)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531==  Address 0x5b513b0 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x4022B5: test4() (main.cpp:107)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403BC2: SkipList::contains(int) const (skiplist.cpp:187)
==1361531==    by 0x403A44: SkipList::remove(int) (skiplist.cpp:159)
==1361531==    by 0x402415: test4() (main.cpp:115)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531==  Address 0x5b513b0 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x4022B5: test4() (main.cpp:107)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403AA1: SkipList::remove(int) (skiplist.cpp:166)
==1361531==    by 0x402415: test4() (main.cpp:115)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531==  Address 0x5b513a8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x4022B5: test4() (main.cpp:107)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x40318B: SkipList::getBeforeNodes(int) const (skiplist.cpp:26)
==1361531==    by 0x403A27: SkipList::remove(int) (skiplist.cpp:155)
==1361531==    by 0x402446: test4() (main.cpp:116)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531==  Address 0x5b513a8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x4022B5: test4() (main.cpp:107)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403BFC: SkipList::contains(int) const (skiplist.cpp:194)
==1361531==    by 0x403A44: SkipList::remove(int) (skiplist.cpp:159)
==1361531==    by 0x402446: test4() (main.cpp:116)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531==  Address 0x5b513b0 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x4022B5: test4() (main.cpp:107)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403C2A: SkipList::contains(int) const (skiplist.cpp:197)
==1361531==    by 0x403A44: SkipList::remove(int) (skiplist.cpp:159)
==1361531==    by 0x402446: test4() (main.cpp:116)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531==  Address 0x5b513b0 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x4022B5: test4() (main.cpp:107)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403AA1: SkipList::remove(int) (skiplist.cpp:166)
==1361531==    by 0x40247A: test4() (main.cpp:117)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531==  Address 0x5b51818 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403755: SkipList::add(int) (skiplist.cpp:115)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x402354: test4() (main.cpp:108)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403ACE: SkipList::remove(int) (skiplist.cpp:167)
==1361531==    by 0x40247A: test4() (main.cpp:117)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531==  Address 0x5b51818 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403755: SkipList::add(int) (skiplist.cpp:115)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x402354: test4() (main.cpp:108)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403AFE: SkipList::remove(int) (skiplist.cpp:167)
==1361531==    by 0x40247A: test4() (main.cpp:117)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531==  Address 0x5b514b8 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403755: SkipList::add(int) (skiplist.cpp:115)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x402354: test4() (main.cpp:108)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531== 
==1361531== Invalid write of size 8
==1361531==    at 0x403B01: SkipList::remove(int) (skiplist.cpp:167)
==1361531==    by 0x40247A: test4() (main.cpp:117)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531==  Address 0x5b51818 is 0 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403755: SkipList::add(int) (skiplist.cpp:115)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x402354: test4() (main.cpp:108)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403327: operator<<(std::ostream&, SkipList const&) (skiplist.cpp:51)
==1361531==    by 0x402515: test4() (main.cpp:120)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531==  Address 0x5b513b0 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403410: SkipList::SkipList(int, int) (skiplist.cpp:66)
==1361531==    by 0x4022B5: test4() (main.cpp:107)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x40339F: operator<<(std::ostream&, SkipList const&) (skiplist.cpp:56)
==1361531==    by 0x402515: test4() (main.cpp:120)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531==  Address 0x5b51d30 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x403755: SkipList::add(int) (skiplist.cpp:115)
==1361531==    by 0x4039F2: SkipList::add(std::vector<int, std::allocator<int> > const&) (skiplist.cpp:149)
==1361531==    by 0x402354: test4() (main.cpp:108)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x403327: operator<<(std::ostream&, SkipList const&) (skiplist.cpp:51)
==1361531==    by 0x4025DA: test4() (main.cpp:127)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531==  Address 0x5b521e0 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x4034BE: SkipList::SkipList(SkipList const&) (skiplist.cpp:76)
==1361531==    by 0x402401: test4() (main.cpp:114)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531== 
==1361531== Invalid read of size 8
==1361531==    at 0x40339F: operator<<(std::ostream&, SkipList const&) (skiplist.cpp:56)
==1361531==    by 0x4025DA: test4() (main.cpp:127)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531==  Address 0x5b52a20 is 8 bytes after a block of size 8 alloc'd
==1361531==    at 0x4C378C3: operator new(unsigned long) (vg_replace_malloc.c:422)
==1361531==    by 0x4049EB: __gnu_cxx::new_allocator<SNode*>::allocate(unsigned long, void const*) (new_allocator.h:111)
==1361531==    by 0x4048AB: std::allocator_traits<std::allocator<SNode*> >::allocate(std::allocator<SNode*>&, unsigned long) (alloc_traits.h:436)
==1361531==    by 0x4044E3: std::_Vector_base<SNode*, std::allocator<SNode*> >::_M_allocate(unsigned long) (stl_vector.h:296)
==1361531==    by 0x40463D: void std::vector<SNode*, std::allocator<SNode*> >::_M_realloc_insert<SNode*>(__gnu_cxx::__normal_iterator<SNode**, std::vector<SNode*, std::allocator<SNode*> > >, SNode*&&) (vector.tcc:427)
==1361531==    by 0x40425F: void std::vector<SNode*, std::allocator<SNode*> >::emplace_back<SNode*>(SNode*&&) (vector.tcc:109)
==1361531==    by 0x403E15: std::vector<SNode*, std::allocator<SNode*> >::push_back(SNode*&&) (stl_vector.h:1091)
==1361531==    by 0x40321D: SNode::SNode(int) (skiplist.cpp:36)
==1361531==    by 0x4035B4: SkipList::SkipList(SkipList const&) (skiplist.cpp:92)
==1361531==    by 0x402401: test4() (main.cpp:114)
==1361531==    by 0x402755: main (main.cpp:139)
==1361531== 
==1361531== 
==1361531== HEAP SUMMARY:
==1361531==     in use at exit: 320 bytes in 16 blocks
==1361531==   total heap usage: 209 allocs, 193 frees, 83,682 bytes allocated
==1361531== 
==1361531== LEAK SUMMARY:
==1361531==    definitely lost: 256 bytes in 8 blocks
==1361531==    indirectly lost: 64 bytes in 8 blocks
==1361531==      possibly lost: 0 bytes in 0 blocks
==1361531==    still reachable: 0 bytes in 0 blocks
==1361531==         suppressed: 0 bytes in 0 blocks
==1361531== Rerun with --leak-check=full to see details of leaked memory
==1361531== 
==1361531== For lists of detected and suppressed errors, rerun with: -s
==1361531== ERROR SUMMARY: 428 errors from 126 contexts (suppressed: 0 from 0)
=====================================================
7. Tests have full code coverage
=====================================================
File '/home/NETID/cdimip/2021au342d-p4-skiplist-PretzelHH/main.cpp':
Name                        Regions    Miss   Cover     Lines    Miss   Cover  Branches    Miss   Cover
-------------------------------------------------------------------------------------------------------
test1()                           1       0 100.00%        22       6  72.73%         0       0   0.00%
test2()                           1       0 100.00%        15       2  86.67%         0       0   0.00%
test3()                           1       0 100.00%        29       8  72.41%         0       0   0.00%
test4()                           1       0 100.00%        24       6  75.00%         0       0   0.00%
main                              1       0 100.00%         8       0 100.00%         0       0   0.00%
-------------------------------------------------------------------------------------------------------
TOTAL                             5       0 100.00%        98      22  77.55%         0       0   0.00%

File '/home/NETID/cdimip/2021au342d-p4-skiplist-PretzelHH/random.cpp':
Name                        Regions    Miss   Cover     Lines    Miss   Cover  Branches    Miss   Cover
-------------------------------------------------------------------------------------------------------
Random::random()                  3       1  66.67%         6       2  66.67%         2       1  50.00%
-------------------------------------------------------------------------------------------------------
TOTAL                             3       1  66.67%         6       2  66.67%         2       1  50.00%

File '/home/NETID/cdimip/2021au342d-p4-skiplist-PretzelHH/skiplist.cpp':
Name                                                           Regions    Miss   Cover     Lines    Miss   Cover  Branches    Miss   Cover
------------------------------------------------------------------------------------------------------------------------------------------
SkipList::shouldInsertAtHigherLevel() const                          1       0 100.00%         3       0 100.00%         0       0   0.00%
SkipList::getBeforeNodes(int) const                                  8       0 100.00%        11       0 100.00%         6       0 100.00%
SNode::SNode(int)                                                    1       0 100.00%         4       0 100.00%         0       0   0.00%
SNode::SNode(SNode const&)                                           4       4   0.00%         6       6   0.00%         2       2   0.00%
operator<<(std::ostream&, SkipList const&)                           6       0 100.00%        12       0 100.00%         4       0 100.00%
SkipList::SkipList(int, int)                                         4       0 100.00%         8       0 100.00%         2       0 100.00%
SkipList::SkipList(SkipList const&)                                 11       0 100.00%        21       0 100.00%         8       0 100.00%
SkipList::~SkipList()                                                3       0 100.00%        10       0 100.00%         2       0 100.00%
SkipList::add(int)                                                  11       0 100.00%        25       0 100.00%         8       0 100.00%
SkipList::add(std::vector<int, std::allocator<int> > const&)         4       0 100.00%         5       0 100.00%         2       0 100.00%
SkipList::remove(int)                                                9       0 100.00%        14       0 100.00%         6       0 100.00%
SkipList::contains(int) const                                       18       0 100.00%        24       0 100.00%        12       0 100.00%
------------------------------------------------------------------------------------------------------------------------------------------
TOTAL                                                               80       4  95.00%       143       6  95.80%        52       2  96.15%
/home/NETID/cdimip/2021au342d-p4-skiplist-PretzelHH/main.cpp:
    1|       |#include "skiplist.h"
    2|       |#include <cassert>
    3|       |#include <iostream>
    4|       |#include <sstream>
    5|       |
    6|       |using namespace std;
    7|       |
    8|       |// ************************************
    9|       |// IMPORTANT: The below tests use Random::random to get random numbers, so
   10|       |// adding more tests (or removing tests) will change how the SkipList is
   11|       |// structured! Calling Random::random unnecessarily may also break tests.
   12|       |// On the plus side, each run uses the same random numbers which makes
   13|       |// debugginng easier.
   14|       |// ************************************
   15|       |
   16|       |// testing basic operations: operator<<, add, contains
   17|      1|void test1() {
   18|      1|  stringstream outSS;
   19|      1|  SkipList skp;
   20|      1|  skp.add(3);
   21|      1|  outSS << skp;
   22|      1|  assert(outSS.str() == "[level: 1] 3-->nullptr\n");
   23|       |
   24|      0|  skp.add(9);
   25|      1|  outSS.str("");
   26|      1|  outSS << skp;
   27|      1|  assert(outSS.str() == "[level: 1] 3-->9-->nullptr\n");
   28|       |
   29|      0|  skp.add(1);
   30|      1|  outSS.str("");
   31|      1|  outSS << skp;
   32|      1|  assert(outSS.str() == "[level: 1] 1-->3-->9-->nullptr\n");
   33|       |
   34|      0|  skp.add(vector<int>{7, 5});
   35|      1|  outSS.str("");
   36|      1|  outSS << skp;
   37|      1|  assert(outSS.str() == "[level: 1] 1-->3-->5-->7-->9-->nullptr\n");
   38|       |
   39|      0|  assert(skp.contains(1) && skp.contains(7) && skp.contains(9));
   40|      0|  assert(!skp.contains(0) && !skp.contains(20));
   41|       |
   42|       |  // TODO(student) check there are no memory leaks after test completed
   43|      0|  cout << "test1 done." << endl;
   44|      1|}
   45|       |
   46|       |// testing the copy constructor for the SkipList
   47|      1|void test2() {
   48|      1|  stringstream outSS;
   49|      1|  SkipList *skp1 = new SkipList;
   50|      1|  skp1->add(vector<int>{9, 1, 7, 5});
   51|       |
   52|      1|  outSS.str("");
   53|      1|  outSS << *skp1;
   54|      1|  assert(outSS.str() == "[level: 1] 1-->5-->7-->9-->nullptr\n");
   55|       |
   56|      0|  SkipList *skp2 = new SkipList(*skp1);
   57|      1|  delete skp1;
   58|      1|  outSS.str("");
   59|      1|  outSS << *skp2;
   60|      1|  assert(outSS.str() == "[level: 1] 1-->5-->7-->9-->nullptr\n");
   61|      0|  delete skp2;
   62|       |  // TODO(student) check there are no memory leaks after test completed
   63|      1|  cout << "test2 done." << endl;
   64|      1|}
   65|       |
   66|       |// testing SkipList with multiple levels
   67|      1|void test3() {
   68|      1|  stringstream outSS;
   69|      1|  SkipList skp(3, 80);
   70|      1|  skp.add(vector<int>{9, 1, 7, 5, 3, 20});
   71|       |
   72|      1|  outSS << skp;
   73|      1|  assert(outSS.str() == "[level: 3] 7-->nullptr\n"
   74|      1|                        "[level: 2] 3-->7-->nullptr\n"
   75|      1|                        "[level: 1] 1-->3-->5-->7-->9-->20-->nullptr\n");
   76|       |
   77|      0|  skp.add(vector<int>{-20, 100});
   78|      1|  outSS.str("");
   79|      1|  outSS << skp;
   80|      1|  assert(outSS.str() ==
   81|      1|         "[level: 3] -20-->7-->100-->nullptr\n"
   82|      1|         "[level: 2] -20-->3-->7-->100-->nullptr\n"
   83|      1|         "[level: 1] -20-->1-->3-->5-->7-->9-->20-->100-->nullptr\n");
   84|       |
   85|       |  // TODO(student) check that contains searches from top level down
   86|      0|  assert(skp.contains(1) && skp.contains(7) && skp.contains(9));
   87|      0|  assert(!skp.contains(0) && !skp.contains(200));
   88|      0|  assert(skp.contains(-20) && skp.contains(100));
   89|       |
   90|      0|  SkipList skp2(3, 30);
   91|      1|  skp2.add(vector<int>{9, 1, 7, 5, 3, 20});
   92|      1|  outSS.str("");
   93|      1|  outSS << skp2;
   94|      1|  assert(outSS.str() == "[level: 3] nullptr\n"
   95|      1|                        "[level: 2] 3-->5-->nullptr\n"
   96|      1|                        "[level: 1] 1-->3-->5-->7-->9-->20-->nullptr\n");
   97|       |
   98|      0|  assert(skp2.contains(3) && skp2.contains(5) && skp2.contains(20));
   99|      0|  assert(!skp2.contains(-3) && !skp2.contains(4) && !skp2.contains(200));
  100|       |  // TODO(student) check there are no memory leaks after test completed
  101|      0|  cout << "test3 done." << endl;
  102|      1|}
  103|       |
  104|       |// removing from multi-level SkipList
  105|      1|void test4() {
  106|      1|  stringstream outSS;
  107|      1|  SkipList skp(3, 50);
  108|      1|  skp.add(vector<int>{9, 1, 7, 5, 3, 20});
  109|       |
  110|      1|  outSS << skp;
  111|      1|  assert(outSS.str() == "[level: 3] 20-->nullptr\n"
  112|      1|                        "[level: 2] 3-->5-->7-->9-->20-->nullptr\n"
  113|      1|                        "[level: 1] 1-->3-->5-->7-->9-->20-->nullptr\n");
  114|      0|  SkipList skp2(skp);
  115|      1|  assert(skp.remove(1));
  116|      0|  assert(!skp.remove(100));
  117|      0|  assert(skp.remove(9));
  118|       |
  119|      0|  outSS.str("");
  120|      1|  outSS << skp;
  121|      1|  assert(outSS.str() == "[level: 3] 20-->nullptr\n"
  122|      1|                        "[level: 2] 3-->5-->7-->20-->nullptr\n"
  123|      1|                        "[level: 1] 3-->5-->7-->20-->nullptr\n");
  124|       |
  125|       |  // skp2 should be unchanged
  126|      0|  outSS.str("");
  127|      1|  outSS << skp2;
  128|      1|  assert(outSS.str() == "[level: 3] 20-->nullptr\n"
  129|      1|                        "[level: 2] 3-->5-->7-->9-->20-->nullptr\n"
  130|      1|                        "[level: 1] 1-->3-->5-->7-->9-->20-->nullptr\n");
  131|       |  // TODO(student) check there are no memory leaks after test completed
  132|      0|  cout << "test4 done." << endl;
  133|      1|}
  134|       |
  135|      1|int main() {
  136|      1|  test1();
  137|      1|  test2();
  138|      1|  test3();
  139|      1|  test4();
  140|      1|  cout << "Done." << endl;
  141|      1|  return 0;
  142|      1|}

/home/NETID/cdimip/2021au342d-p4-skiplist-PretzelHH/random.cpp:
    1|       |#include "random.h"
    2|       |#include <vector>
    3|       |
    4|     31|int Random::random() {
    5|     31|  if (counter >= NUMS.size()) {
    6|      0|    counter = 0;
    7|      0|  }
    8|     31|  return NUMS[counter++];
    9|     31|}
   10|       |
   11|       |int Random::counter = 0;
   12|       |
   13|       |const vector<int> Random::NUMS = {
   14|       |    1804289383, 846930886,  1681692777, 1714636915, 1957747793, 424238335,
   15|       |    719885386,  1649760492, 596516649,  1189641421, 1025202362, 1350490027,
   16|       |    783368690,  1102520059, 2044897763, 1967513926, 1365180540, 1540383426,
   17|       |    304089172,  1303455736, 35005211,   521595368,  294702567,  1726956429,
   18|       |    336465782,  861021530,  278722862,  233665123,  2145174067, 468703135,
   19|       |    1101513929, 1801979802, 1315634022, 635723058,  1369133069, 1125898167,
   20|       |    1059961393, 2089018456, 628175011,  1656478042, 1131176229, 1653377373,
   21|       |    859484421,  1914544919, 608413784,  756898537,  1734575198, 1973594324,
   22|       |    149798315,  2038664370, 1129566413, 184803526,  412776091,  1424268980,
   23|       |    1911759956, 749241873,  137806862,  42999170,   982906996,  135497281,
   24|       |    511702305,  2084420925, 1937477084, 1827336327, 572660336,  1159126505,
   25|       |    805750846,  1632621729, 1100661313, 1433925857, 1141616124, 84353895,
   26|       |    939819582,  2001100545, 1998898814, 1548233367, 610515434,  1585990364,
   27|       |    1374344043, 760313750,  1477171087, 356426808,  945117276,  1889947178,
   28|       |    1780695788, 709393584,  491705403,  1918502651, 752392754,  1474612399,
   29|       |    2053999932, 1264095060, 1411549676, 1843993368, 943947739,  1984210012,
   30|       |    855636226,  1749698586, 1469348094, 1956297539
   31|       |
   32|       |};

/home/NETID/cdimip/2021au342d-p4-skiplist-PretzelHH/skiplist.cpp:
    1|       |#include "skiplist.h"
    2|       |#include "random.h"
    3|       |#include <cassert>
    4|       |#include <climits>
    5|       |#include <cstdlib>
    6|       |#include <iostream>
    7|       |#include <unordered_map>
    8|       |
    9|       |using namespace std;
   10|       |
   11|       |// checks if the value needs to be inserted at a higher level
   12|     31|bool SkipList::shouldInsertAtHigherLevel() const {
   13|     31|  return probability >= Random::random() % 100;
   14|     31|}
   15|       |
   16|       |// you code goes here
   17|       |
   18|       |// Gets the SNode pointers before the given value
   19|     32|vector<SNode *> SkipList::getBeforeNodes(int val) const {
   20|     32|  vector<SNode *> previous;
   21|       |
   22|       |  // search for the value
   23|    110|  for (int i = 0; i < levels; i++) {
   24|     78|    SNode *curr = head;
   25|    147|    while (curr->next[i] != nullptr && curr->next[i]->val < val) {
   26|     69|      curr = curr->next[i];
   27|     69|    }
   28|     78|    previous.push_back(curr);
   29|     78|  }
   30|     32|  return previous;
   31|     32|}
   32|       |
   33|       |// SNode constructor
   34|     52|SNode::SNode(int val) {
   35|     52|  this->val = val;
   36|     52|  next.push_back(nullptr);
   37|     52|}
   38|       |
   39|       |// SNode copy constructor
   40|      0|SNode::SNode(const SNode &other) {
   41|      0|  this->val = other.val;
   42|      0|  for (int i = 0; i < other.next.size(); i++) {
   43|      0|    next[i] = other.next[i];
   44|      0|  }
   45|      0|}
   46|       |
   47|       |// Prints out the Skip list
   48|     12|ostream &operator<<(ostream &out, const SkipList &skip) {
   49|       |
   50|     36|  for (int i = skip.levels; i > 0; i--) {
   51|     24|    SNode *curr = skip.head->next[i - 1];
   52|     24|    out << "[level: " << i << "] ";
   53|       |
   54|    108|    while (curr != nullptr) {
   55|     84|      out << curr->val << "-->";
   56|     84|      curr = curr->next[i - 1];
   57|     84|    }
   58|       |
   59|     24|    out << "nullptr" << endl;
   60|     24|  }
   61|     12|  return out;
   62|     12|}
   63|       |
   64|       |// SkipList constructor
   65|      5|SkipList::SkipList(int levels, int probability) {
   66|      5|  head = new SNode();
   67|     16|  for (int i = 0; i < levels; i++) {
   68|     11|    head->next[i] = nullptr;
   69|     11|  }
   70|      5|  this->levels = levels;
   71|      5|  this->probability = probability;
   72|      5|}
   73|       |
   74|       |// SkipList copy constructor
   75|      2|SkipList::SkipList(const SkipList &other) {
   76|      2|  head = new SNode();
   77|      2|  this->levels = other.levels;
   78|      2|  this->probability = other.probability;
   79|      2|  SNode *tmp = head;
   80|       |
   81|       |  // insert nullptr to the new head
   82|      6|  for (int i = 0; i < levels; i++) {
   83|      4|    tmp->next[i] = nullptr;
   84|      4|  }
   85|       |
   86|       |  // inserts the rest of pointers to seperate nodes
   87|      6|  for (int i = 0; i < levels; i++) {
   88|      4|    SNode *otherHead = other.head;
   89|      4|    SNode *curr = head;
   90|       |
   91|     20|    while (otherHead->next[i] != nullptr) {
   92|     16|      SNode *newNode = new SNode(otherHead->next[i]->val);
   93|     28|      while (curr->next[i] != nullptr) {
   94|     12|        curr = curr->next[i];
   95|     12|      }
   96|     16|      curr->next[i] = newNode;
   97|     16|      otherHead = otherHead->next[i];
   98|     16|    }
   99|      4|  }
  100|      2|}
  101|       |
  102|       |// destructor
  103|      7|SkipList::~SkipList() {
  104|      7|  SNode *curr = head;
  105|      7|  SNode *next;
  106|     51|  while (curr != nullptr) {
  107|     44|    next = curr->next[0];
  108|     44|    delete curr;
  109|     44|    curr = next;
  110|     44|  }
  111|      7|  head = nullptr;
  112|      7|}
  113|       |
  114|     29|void SkipList::add(int val) {
  115|     29|  SNode *newNode = new SNode(val);
  116|     29|  vector<SNode *> prevNodes = getBeforeNodes(val);
  117|     29|  int index = 0;
  118|       |
  119|       |  // adds everything to level 1
  120|     29|  SNode *curr = head;
  121|     29|  if (curr->next[index] == nullptr) {
  122|      5|    curr->next[index] = newNode;
  123|     24|  } else {
  124|     24|    curr = prevNodes[index];
  125|     24|    newNode->next[index] = curr->next[index];
  126|     24|    curr->next[index] = newNode;
  127|     24|  }
  128|       |
  129|       |  // moves to the next level
  130|     29|  index++;
  131|       |
  132|       |  // adds to level 2 and up if needs to be inserted
  133|     44|  while (index < levels && shouldInsertAtHigherLevel()) {
  134|     15|    SNode *curr = head;
  135|     15|    if (curr->next[index] == nullptr) {
  136|      5|      curr->next[index] = newNode;
  137|     10|    } else {
  138|     10|      curr = prevNodes[index];
  139|     10|      newNode->next[index] = curr->next[index];
  140|     10|      curr->next[index] = newNode;
  141|     10|    }
  142|     15|    index++;
  143|     15|  }
  144|     29|}
  145|       |
  146|       |// Add to list, assume no duplicates
  147|      6|void SkipList::add(const vector<int> &values) {
  148|     32|  for (int i = 0; i < values.size(); i++) {
  149|     26|    add(values[i]);
  150|     26|  }
  151|      6|}
  152|       |
  153|       |// removes a node with the determined value
  154|      3|bool SkipList::remove(int val) {
  155|      3|  vector<SNode *> prevNodes = getBeforeNodes(val);
  156|      3|  SNode *curr = head;
  157|       |
  158|       |  // checks if the value is inside the skiplist
  159|      3|  if (!contains(val)) {
  160|      1|    return false;
  161|      1|  }
  162|       |
  163|       |  // deletes the skiplist for each level
  164|      8|  for (int i = 0; i < levels; i++) {
  165|      6|    curr = prevNodes[i];
  166|      6|    if (curr->next[i]->val == val) {
  167|      3|      curr->next[i] = curr->next[i]->next[i];
  168|      3|    }
  169|      6|  }
  170|       |
  171|      2|  return true;
  172|      3|}
  173|       |
  174|       |// return true if found in skiplist
  175|     21|bool SkipList::contains(int val) const {
  176|     21|  SNode *curr = head;
  177|     21|  int index = levels - 1;
  178|       |
  179|     43|  while (index >= 0) {
  180|       |    // if the highest level points to null and still have lower levels
  181|     39|    if (curr->next[index] == nullptr) {
  182|     16|      index--;
  183|     23|    } else {
  184|       |      // checks if there is the target value in the level if not it
  185|       |      // it will go down by 1 level
  186|     71|      while (curr->next[index] != nullptr) {
  187|     65|        if (curr->next[index]->val > val) {
  188|     15|          if (index > 0) {
  189|     11|            index--;
  190|     11|          } else {
  191|      4|            return false;
  192|      4|          }
  193|       |          // if the value is found
  194|     50|        } else if (curr->next[index]->val == val) {
  195|     13|          return true;
  196|     37|        } else {
  197|     37|          curr = curr->next[index];
  198|     37|        }
  199|     65|      }
  200|     23|    }
  201|     39|  }
  202|      4|  return false;
  203|     21|}

Mon Nov 28 17:04:07 PST 2022
=====================================================
To create an output.txt file with all the output from this script
Run the below command
      ./create-output.sh > output.txt 2>&1 
=====================================================
